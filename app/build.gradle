apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')

    //Create a version properties file and add required properties with default values
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_BUILD'] = "0"
        versionProps['VERSION_NUMBER'] = "0"

        Writer writer = new FileWriter(versionPropsFile, false)
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    // Read existing
    if (versionPropsFile.canRead()) {
        versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0
        def versionType = "D"


        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || ':app:assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
            versionType = "R"
        }

        def versionNumber = 1
        //  def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        //def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "edu.aku.hassannaqvi.uenmd_hhlisting"
            versionCode versionBuild
            versionName "${versionNumber}.${versionPatch}${versionType}"
            minSdk 22
            targetSdk 29
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->

                def appName = rootProject.name
                def date = new Date()
                def formattedDate = date.format('yyyy_MM_dd')

                def outputDir = new File("${project.buildDir.absolutePath}/outputs/apk/${variant.flavorName}/${variant.buildType.name}")
                //def outputFileName = "app-${variant.flavorName}-${variant.buildType.name}.apk"
                def outputFileName = "${appName}_${formattedDate}_${versionType}v${versionBuild}.apk"
                // def outputFile = new File("$outputDir/$outputFileName")
                variant.packageApplicationProvider.get().outputDirectory = new File("$outputDir")
                output.outputFileName = outputFileName
                /*  if (outputFileName != null && outputFileName.endsWith('.apk')) {
                      //output.outputFileName = outputFileName
                      output.outputFileName = new File("${project.buildDir.absolutePath}/outputs/apk/", "${outputDir}-${versionMajor}.${versionMinor}.${versionPatch}-${outputFileName}")
                  }*/

            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }

    dataBinding{
        enabled true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion '31.0.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.4.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.google.android.gms:play-services-maps:18.0.1'
    implementation 'com.google.android.gms:play-services-location:19.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'
    testImplementation 'junit:junit:4.13.2'

    //Constraint
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    //Butterknife
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'com.jakewharton:butterknife:10.2.3'
    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.vectordrawable:vectordrawable-animated:1.1.0'
    implementation 'androidx.media:media:1.4.3'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    //FancyToast
    implementation 'com.github.Shashank02051997:FancyToast-Android:0.1.6'
    //Edittext library
    implementation 'com.github.AliAzaz:Edittext-Library:2.0.0'
    //Validator Crawler
    implementation 'com.github.AliAzaz:AndroidValidatorCrawler:1.0.3'
    //SDP
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    //Gson
    implementation 'com.google.code.gson:gson:2.8.9'
    
}
